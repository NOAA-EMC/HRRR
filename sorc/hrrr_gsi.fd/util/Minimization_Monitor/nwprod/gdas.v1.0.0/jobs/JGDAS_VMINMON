#!/bin/sh
###########################################################
# GDAS Minimization Monitor (MinMon) job
###########################################################
set -xa
echo `date` $0 `date -u` begin
export PS4='$SECONDS + '

###############################
# Specify NET and RUN name
##############################
export NET=${NET:-gfs}
export RUN=${RUN:-gdas}


###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################
export pid=$$
export outid=${outid:-"LL$job"}

export DATA=${DATA:-${DATAROOT}/${jobid:?}}
mkdir -p $DATA
cd $DATA


########################################################### 
# obtain unique process id (pid) and make temp directories
###########################################################
export MINMON_SUFFIX=${MINMON_SUFFIX:-${NET}}
export m_job=${m_job:-${MINMON_SUFFIX}_mmDE}


##############################################
# Specify Package Areas
##############################################
export HOMEgfs=${HOMEgfs:-${NWROOT}/gfs.${gfs_ver}}
export SCRgfs=${SCRgfs:-$HOMEgfs/scripts}

export PARMmon=${PARMmon:-$HOMEgfs/parm/mon}
export M_FIXgdas=${M_FIXgfs:-$HOMEgfs/fix/gdas}

export HOMEminmon=${HOMEminmon:-${HOMEgfs}}
export EXECminmon=${EXECminmon:-$HOMEminmon/exec}
export USHminmon=${USHminmon:-$HOMEminmon/ush}


###################################
# source the parm file
###################################
.  ${PARMmon}/da_mon.parm


#############################################
# Run setpdy and initialize PDY variables
#############################################
if [[ $MY_MACHINE != "theia" ]]; then
   export cycle=t${cyc}z
   setpdy.sh
   . ./PDY
fi

#############################################
#  determine PDY and cyc for previous cycle
#############################################

cdate=`${NDATE} -6 ${PDY}${cyc}`
echo 'pdate = ${pdate}'

export P_PDY=`echo ${cdate} | cut -c1-8`
export p_cyc=`echo ${cdate} | cut -c9-10`


#############################################
# TANKverf - WHERE OUTPUT DATA WILL RESIDE
#############################################
export COM_IN=${COM_IN:-${COMROOT}/${NET}/${envir}}

M_TANKverf=${M_TANKverf:-${COM_IN}}
M_TANKverfM0=${M_TANKverfM0:-${M_TANKverf}/${RUN}.${PDY}/${cyc}/minmon}
export M_TANKverfM1=${M_TANKverfM1:-${M_TANKverf}/${RUN}.${P_PDY}/${p_cyc}/minmon}
export M_TANKverf=$M_TANKverfM0

export COMIN=${COMIN:-$COM_IN/${RUN}.${PDY}/${cyc}}

mkdir -p -m 775 $M_TANKverf



########################################
# Set necessary environment variables
########################################
export CYCLE_INTERVAL=6
export gsistat=${gsistat:-${COMIN}/gdas.t${cyc}z.gsistat}


msg="JOB HAS STARTED"
postmsg "$jlogfile" "$msg"

########################################################
# Execute the script.
${GMONSH:-$SCRgfs/exgdas_vrfminmon.sh.ecf} ${PDY} ${cyc}
err=$?
[[ $err -ne 0 ]] && exit $err

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

################################
# Remove the Working Directory
################################
KEEPDATA=${KEEPDATA:-NO}
cd ${DATAROOT}

if [ ${KEEPDATA} = NO ] ; then
  rm -rf ${DATA}
fi


