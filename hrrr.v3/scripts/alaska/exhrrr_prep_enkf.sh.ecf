#!/bin/ksh -l
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:       exhrrr_prep_enkf.sh.sms
# Script description:  runs the GSI and boundary update for the HRRR cycle
#
# Author:   Ming Hu / Geoff Manikin / Julia Zhu  Org: EMC       Date: 2011-10-01
#
# Script history log:
# 2011-10-01  M Hu / G Manikin / J Zhu
# 2018-01-24  B Blake / G Manikin / C Alexander - HRRRv3 

ulimit -s 512000
set -x

# Set paths to unix commands
DATE=/bin/date
AWK="/bin/awk --posix"

# Create the working directory and cd into it
cd $DATA

# Make sure START_TIME is in the correct format
START_TIME=${PDY}' '${cychrrr}
echo $START_TIME
echo $cychrrr
START_TIME=`echo "${START_TIME}" | sed 's/\([[:digit:]]\{2\}\)$/ \1/'`
START_TIME=`${DATE} -d "${START_TIME}"`

# START GSI
# Bring over background field (it's modified by GSI so we can't link to it)
time_str=`${DATE} "+%Y-%m-%d_%H_%M_%S" -d "${START_TIME}"`
echo " time_str = ${time_str}"

# read in grid specs
cp ${FIXhrrr}/hrrrak_gridspecs ./wrf_inout

# Set fixed files
anavinfo=${FIXhrrr}/hrrrak_anavinfo_arw_netcdf
processanl=${PARMhrrr}/hrrrak_process_enkf.anl

# Fixed fields
cp $anavinfo anavinfo
cp $processanl namelist.input
# 

# Find closest GFS EnKF forecast to analysis time
#
CYCSTART_TIME=${PDY}' '${cychrrr}

stampcycle=`date -d "${CYCSTART_TIME}" +%s`
minHourDiff=100
loops="009"
for loop in $loops; do
  for timelist in `ls ${COMINgfs}/enkf.*/*/gdas*.atmf${loop}s.mem080.nemsio`; do
    availtimeyyyymmdd=`echo ${timelist} | cut -d'/' -f9 | cut -c 6-13`
    availtimehh=`echo ${timelist} | cut -d'/' -f10`
    availtime=${availtimeyyyymmdd}${availtimehh}
    AVAIL_TIME=`echo "${availtime}" | sed 's/\([[:digit:]]\{2\}\)$/ \1/'`
    AVAIL_TIME=`date -d "${AVAIL_TIME}"`

    stamp_avail=`date -d "${AVAIL_TIME} ${loop} hours" +%s`

    hourDiff=`echo "($stampcycle - $stamp_avail) / (60 * 60 )" | bc`;
    if [[ ${stampcycle} -lt ${stamp_avail} ]]; then
       hourDiff=`echo "($stamp_avail - $stampcycle) / (60 * 60 )" | bc`;
    fi

    if [[ ${hourDiff} -lt ${minHourDiff} ]]; then
       minHourDiff=${hourDiff}
       EYYYYMMDD=$(echo ${availtime} | cut -c1-8)
       EHH=$(echo ${availtime} | cut -c9-10)
       enkfcstname=gdas.t${EHH}z.atmf${loop}s
    fi
  done
done
ls ${COMINgfs}/enkf.${EYYYYMMDD}/${EHH}/${enkfcstname}.mem???.nemsio > filelist01

export pgm=hrrr_process_enkf
startmsg
cp ${EXEChrrr}/hrrr_process_enkf .
runline="aprun -n 96 -N 24 ./hrrr_process_enkf"
$runline

cp enspreproc_arw_mem* ${HRRRGES_ENKF}
tar -cvf hrrr_enspreproc_${availtime}.tar enspreproc*
cp hrrr_enspreproc_${availtime}.tar $COMOUT/.

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

exit 0
