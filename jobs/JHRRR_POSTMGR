#!/bin/ksh -l
set -xa

#############################################
# HRRR Post Manager to Release Post-Processor
#    Jobs as the Forecast Progresses
#############################################

######################################################
# The following two variable could be defined in the
# loadleveler submission script (the ecf script), if
# not they will take the default values which is set
# for the NCO running enviroment
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-nco}

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-hrrr}
export RUN=${RUN:-hrrr}
export model=${model:-hrrr}

#####################################################################################
# This block is for Developer's test run:
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to ${DATAROOT}
# SENDECF: If the job is to be running using ECF, default to YES
# SENDDBN: Set to NO for developers, default to YES
# COM_IN:  Directory for input files, default to ${COMROOT}/$NET/${envir}
# COM_OUT: Directory for output file, default to ${COMROOT}/$NET/${envir}
# gespath: Directory for the guess or restart files, default to ${GESROOT}/${envir}
#####################################################################################
if [ "$RUN_ENVIR" != nco ]      ### For Developers, "group_name" is passed from the ECF script
then
  group_name=${group_name:-meso}
  package_name=${package_name:-hrrr}
#  . /${group_name}/save/${LOGNAME}/${package_name}${NWROOT}/parm/${package_name}_para_config
  export userid=${userid:-$LOGNAME}
fi

export PS4='$SECONDS + '
date

####################################
# obtain unique process id (pid) and make temp directory
####################################
export DATA=${DATAROOT}/hrrr_${dom}_postmgr_${envir}_${cyc}
mkdir -p $DATA
cd $DATA

export cycle=t${cyc}z
export tmmark=tm00

export pgmout="OUTPUT.$$"

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy files to /com directory
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}

####################################
# Specify Execution Areas
####################################
export HOMEhrrr=${HOMEhrrr:-${NWROOT}/${NET}.${hrrr_ver}}
export EXEChrrr=${EXEChrrr:-${HOMEhrrr}/exec}
export FIXhrrr=${FIXhrrr:-${HOMEhrrr}/fix/${dom}}
export PARMhrrr=${PARMhrrr:-${HOMEhrrr}/parm/${dom}}
export USHhrrr=${USHhrrr:-${HOMEhrrr}/ush/${dom}}

###########################################
# Run setpdy and initialize PDY variables
###########################################
setpdy.sh
. PDY

##############################################
# Define COM directories
##############################################

# for testing with canned data
#export COMROOT=${COMROOT:-/lfs/h2/emc/ptmp/Benjamin.Blake/com}
#export COMIN=${COMIN:-${COMROOT}/${NET}/${hrrr_ver}/${RUN}.${PDY}/${dom}}
#export COMOUT=${COMOUT:-${COMROOT}/${NET}/${hrrr_ver}/${RUN}.${PDY}/${dom}}

# for WCOSS2 ops
export COMIN=${COMIN:-$(compath.py ${envir}/${NET}/${hrrr_ver}/${RUN}.${PDY}/${dom})}
export COMOUT=${COMOUT:-$(compath.py ${envir}/${NET}/${hrrr_ver}/${RUN}.${PDY}/${dom})}

env
export INPUT_DATA=${DATAROOT}/hrrr_${dom}_fcst_${envir}_${cyc}

########################################################
# Execute the script.
${HRRR_POSTMGRSH:-$HOMEhrrr/scripts/${dom}/exhrrr_postmgr.sh}
########################################################

cat $pgmout

msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATA
if [ ${KEEPDATA} = NO ] 
then
 rm -rf $DATA 
fi

date
