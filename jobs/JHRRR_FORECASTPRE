#!/bin/ksh -l
set -xa
export MP_IOAGENT_CNT=all
export MP_IO_BUFFER_SIZE=8M

########################################
# HRRR Spinup Forecast
########################################

######################################################
# The following two variable could be defined in the
# loadleveler submission script (the ecf script), if
# not they will take the default values which is set
# for the NCO running enviroment
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-nco}
export SENDECF=${SENDECF:-YES}

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-hrrr}
export RUN=${RUN:-hrrr}
export model=${model:-hrrr}

#####################################################################################
# This block is for Developer's test run:
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to ${DATAROOT}
# SENDECF: If the job is to be running using ECF, default to YES
# SENDDBN: Set to NO for developers, default to YES
# COM_IN:  Directory for input files, default to ${COMROOT}/$NET/${envir}
# COM_OUT: Directory for output file, default to ${COMROOT}/$NET/${envir}
# gespath: Directory for the guess or restart files, default to ${GESROOT}/${envir}
#####################################################################################
if [ "$RUN_ENVIR" != nco ]      ### For Developers, "group_name" is passed from the ECF script
then
  group_name=${group_name:-meso}
  package_name=${package_name:-hrrr}
#  . /${group_name}/save/${LOGNAME}/${package_name}${NWROOT}/parm/${package_name}_para_config
  export userid=${userid:-$LOGNAME}
fi

export PS4='$SECONDS + '
date

####################################
# obtain unique process id (pid) and make temp directory
####################################
export DATA=${DATAROOT}/hrrr_${dom}_fcst_pre_${envir}_${cyc}
mkdir -p $DATA
cd $DATA

export cycle=t${cyc}z
export tmmark=tm00

# need to establish the previous cycle and the cycle 4 hours back
#  so that the script has options for selecting a boundary file

export cycm1=`expr $cyc - 1`
export cycm4=`expr $cyc - 4`
if [ "$cyc" = 00 ]; then
cycm1=23
cycm4=20
elif [ "$cyc" = 01 ]; then
cycm1=00
cycm4=21
elif [ "$cyc" = 02 ]; then
cycm1=01
cycm4=22
elif [ "$cyc" = 03 ]; then
cycm1=02
cycm4=23
else
cycm1=$(printf "%02d" $cycm1)
cycm4=$(printf "%02d" $cycm4)
fi

export pgmout="OUTPUT.$$"

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy files to /com directory
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDSDM=${SENDSDM:-NO}

####################################
# Specify Execution Areas
####################################
export HOMEhrrr=${HOMEhrrr:-${NWROOT}/${NET}.${hrrr_ver}}
export EXEChrrr=${EXEChrrr:-${HOMEhrrr}/exec}
export FIXhrrr=${FIXhrrr:-${HOMEhrrr}/fix/${dom}}
export PARMhrrr=${PARMhrrr:-${HOMEhrrr}/parm/${dom}}
export USHhrrr=${USHhrrr:-${HOMEhrrr}/ush/${dom}}

###########################################
# Run setpdy and initialize PDY variables
###########################################
setpdy.sh
. PDY

##############################################
# Define COM directories
##############################################
export COMIN=${COMIN:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}/${dom}}
export COMINm1=${COMINm1:-${COMROOT}/${NET}/${envir}/${RUN}.${PDYm1}/${dom}}
export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}/${dom}}

if [ "$cyc" -lt 04 ]; then
COMIN4=${COMIN4:-${COMINm1}}
else
COMIN4=${COMIN4:-${COMIN}}
fi

export gespath=${gespath:-$GESROOT/${envir}}

env

########################################################
# Execute the script.
${HRRR_FCSTSH:-$HOMEhrrr/scripts/${dom}/exhrrr_fcstpre.sh.ecf}
########################################################

cat $pgmout

msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATA
if [ ${KEEPDATA} = NO ] ; then rm -rf $DATA ; fi

date
